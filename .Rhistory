arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('') +
xlab('') + ylab(yLAB)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('') +
xlab(xLAB) + ylab('')
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('') +
xlab('') + ylab('')
finalPlot <- ggarrange(paretoPlots[[1]], paretoPlots[[2]], paretoPlots[[3]],
nrow = 1,common.legend = T)
finalPlot
}
arrangePareto(paret_3plantP)
paret_3plantP <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'p')
arrangePareto(paret_3plantP)
arrangePareto
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('') +
xlab('') + ylab(yLAB)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('') +
xlab(xLAB) + ylab('')
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('') +
xlab('') + ylab('')
finalPlot <- ggarrange(paretoPlots[[1]], paretoPlots[[2]], paretoPlots[[3]],
nrow = 1,common.legend = T)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('') +
xlab('') + ylab(yLAB)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('') +
xlab(xLAB) + ylab('')
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('') +
xlab('') + ylab('')
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('') +
xlab('') + ylab(yLAB) + labs(fill = '')
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('') +
xlab(xLAB) + ylab('')
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('') +
xlab('') + ylab('')
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('') +
xlab('') + ylab(yLAB) + guides(fill = '')
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('') +
xlab(xLAB) + ylab('')
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('') +
xlab('') + ylab('')
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('') +
xlab('') + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('') +
xlab(xLAB) + ylab('')
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('') +
xlab('') + ylab('')
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('') +
xlab('') + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('') +
xlab(xLAB) + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
### Pareto Plots
# For protein
paret_3plantP <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'p')
arrangePareto(paret_3plantP)
# for fiber
paret_3plantP <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'f')
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab('') + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab(xLAB) + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
### Pareto Plots
# For protein
paret_3plantP <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'p')
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab(xLAB) + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab('') + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab(xLAB) + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab(xLAB) + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab(xLAB) + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab(xLAB) + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab(xLAB) + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab(xLAB) + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab('') + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab(xLAB) + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab(xLAB) + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab('') + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab('') + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1, bottom = xLab)
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab('') + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab('') + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1,
bottom =  'Nombre del efecto')
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
yLAB <- 'Magnitud del efecto'
xLAB<- 'Nombre del efecto'
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab('') + ylab(yLAB) + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab('') + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1,
left =  'Nombre del efecto',
bottom = 'Magnitud del efecto')
finalPlot
}
arrangePareto(paret_3plantP)
arrangePareto <- function(paretoPlots) {
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab('') + ylab('') + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab('') + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1,
left =  'Nombre del efecto',
bottom = 'Magnitud del efecto')
finalPlot
}
arrangePareto(paret_3plantP)
paret_3plantP <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'p')
arrangePareto(paret_3plantP)
# for fiber
paret_3plantF <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'f')
arrangePareto(paret_3plantF)
pareto_p <- arrangePareto(paret_3plantP)
pareto_f <- arrangePareto(paret_3plantF)
grid.arrange(pareto_p, pareto_f)
data <- readData('Quinoa_f')
with(data, (( interaction.plot(as.name('Tr'), Tg, Respuesta)  )))
with(data, (( interaction.plot(as.name('Tr'), Tg, Respuesta)  )))
data
with(data, (( interaction.plot(Tr, Tg, Respuesta)  )))
with(data, (( interaction.plot(as.name(Tr), Tg, Respuesta)  )))
with(data, (( interaction.plot(Tr, Tg, Respuesta)  )))
with(data, (( interaction.plot(Tr, t, Respuesta)  )))
data <- readData('Amaranto_f')
with(data, (( interaction.plot(Tr, t, Respuesta)  )))
??zIeuZwb0a\yji'
??plot.design
plot.design(Respuesta~Tr*t*Tg, data)
data
plot.design(Respuesta~Tr*t*Tg, data = data)
plot.design(Respuesta~Tr*t*Tg, data = data,
xlab = 'Factores', ylab = 'Respuesta media')
data <- readData('Amaranto_p')
plot.design(Respuesta~Tr*t*Tg, data = data,
xlab = 'Factores', ylab = 'Respuesta media')
# Read common data struccture
readData <- function(sheetID) {
data <- read.xlsx('Experimental_Design.xlsx', sheetName = sheetID)
# Select Needed column and change data structure
data %<>% select(-Tratamiento, -Yates) %>%
transmute(Tr = factor(A, labels = c('Bajo', 'Alto') ),
t = factor(B, labels = c('Bajo', 'Alto')),
Tg = factor(C, labels = c('Bajo', 'Alto')),
Respuesta = Respuesta)
data
}
### Factorial Analyis ####
# This function computa factorial design by changing the plant name
fact_desing <- function(plant = 'Maiz', kind = 'f') {
# Read data
sheet <- paste(plant, kind, sep = '_')
data_f <- readData(sheet)
# Anova as regression model
data_aov <- aov(Respuesta~Tr*t*Tg, data_f)
cat(paste0('Factorial design, two levels three factors for: \n',
ifelse(kind == 'f', 'fiber ', 'protein '), 'of',
plant, '\n \n'))
# Anova table of the previos model
aov_table <- Anova(data_aov, type = 'III')
aov_table
}
### Pareto Char ####
make_3pareto <- function(plant, kind) {
sheet <- paste(plant, kind, sep = '_')
data <- readData(sheet)
mod_full <- lm(Respuesta~Tr*t*Tg, data = data)
gg_pareto <- paretoPlot(mod_full)
gg_pareto
}
arrangePareto <- function(paretoPlots) {
paretoPlots[[1]]  <- paretoPlots[[1]] + ggtitle('Quinoa') +
xlab('') + ylab('') + guides(fill = F)
paretoPlots[[2]]  <- paretoPlots[[2]] + ggtitle('Maíz') +
xlab('') + ylab('')+ guides(fill = F)
paretoPlots[[3]]  <- paretoPlots[[3]] + ggtitle('Amaranto') +
xlab('') + ylab('')+ guides(fill = F)
finalPlot <- grid.arrange(paretoPlots[[1]], paretoPlots[[2]],
paretoPlots[[3]], nrow = 1,
left =  'Nombre del efecto',
bottom = 'Magnitud del efecto')
finalPlot
}
# Read all functions
source('Functions.R')
# The availeble options are: Quinoa, Maiz, Amaranto
fact_desing('Amaranto', 'f')
# The availeble options are: Quinoa, Maiz, Amaranto
# And f and p for fiber and protein respectively
fact_desing('Amaranto', 'p')
### Pareto Plots
# For protein
paret_3plantP <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'p')
### Pareto Char ####
make_3pareto <- function(plant, kind) {
sheet <- paste(plant, kind, sep = '_')
data <- readData(sheet)
mod_full <- lm(Respuesta~Tr*t*Tg, data = data)
gg_pareto <- paretoPlot(mod_full)
gg_pareto
}
### Pareto Plots
# For protein
paret_3plantP <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'p')
pareto_p <- arrangePareto(paret_3plantP)
# for fiber
paret_3plantF <- lapply(c('Quinoa', 'Maiz', 'Amaranto'), make_3pareto, 'f')
pareto_f <- arrangePareto(paret_3plantF)
# Merge pareto plots for fiber and protein
grid.arrange(pareto_p, pareto_f)
data <- readData('Amaranto_p')
plot.design(Respuesta~Tr*t*Tg, data = data,
xlab = 'Factores', ylab = 'Respuesta media')
factor(c(-1, 1), labels = c('B', 'A'))
# Read common data struccture
readData <- function(sheetID) {
data <- read.xlsx('Experimental_Design.xlsx', sheetName = sheetID)
# Select Needed column and change data structure
data %<>% select(-Tratamiento, -Yates) %>%
transmute(Tr = factor(A), t = factor(B),
Tg = factor(C), Respuesta = Respuesta)
data
}
data <- readData('Amaranto_p') %>%
mutate_each(factor(., levels = c('Bajo', 'Alto')), Tr, t, Tg)
data <- readData('Amaranto_p') %>%
mutate_if(is.factor,factor(., levels = c('Bajo', 'Alto')))
data <- readData('Amaranto_p')
plot.design(Respuesta~Tr*t*Tg, data = data,
xlab = 'Factores', ylab = 'Respuesta media')
desingPlot <- function(plant, kind) {
sheet <- paste(plant, kind, sep = '_')
data <- readData(sheet)
plot.design(Respuesta~Tr*t*Tg, data = data,
xlab = 'Factores', ylab = 'Respuesta media')
}
desingPlot <- function(plant, kind) {
sheet <- paste(plant, kind, sep = '_')
data <- readData(sheet)
plot.design(Respuesta~Tr*t*Tg, data = data,
xlab = 'Factores', ylab = 'Respuesta media')
}
desingPlot('Amaranto_p')
desingPlot('Amaranto', 'p')
desingPlot('Amaranto', 'f')
desingPlot <- function(plant, kind) {
sheet <- paste(plant, kind, sep = '_')
data <- readData(sheet)
plot.design(Respuesta~Tr*t*Tg, data = data,
xlab = 'Factores',
ylab = ifelse(kind == 'f', 'Contenido de fibra',
'Contenido de proteina'))
}
desingPlot('Amaranto', 'f')
desingPlot('Amaranto', 'p')
lapply(c('Quinoa', 'Maiz', 'Amaranto'), desingPlot, 'f')
?plot.design
?plot.design
### Interaction Plots ####
# Amaranto: Tr and t
# Quinoa: Tr and Tg
# Maiz: Tr and Tg
# Source: https://cran.r-project.org/doc/contrib/Vikneswaran-ED_companion.pdf
par( mfrow = c( 2, 3 ) )
lapply(c('Quinoa', 'Maiz', 'Amaranto'), desingPlot, 'f')
lapply(c('Quinoa', 'Maiz', 'Amaranto'), desingPlot, 'P')
lapply(c('Quinoa', 'Maiz', 'Amaranto'), desingPlot, 'p')
# Read all functions
source('Functions.R')
?TukeyHSD
# Data analysis for colada data
colada <- read_csv('colada.csv')
# Data analysis for colada data
colada <- read_csv('colada.csv') %>%  select(- catadores)
colada
# Data analysis for colada data
colada <- read_csv('colada.csv') %>%  select(- catadores) %>%
mutate(tratamiento = factor(tratamiento))
colada
colada %>% ggpaired(aes(tratamiento, aceptabilidad, fill = tratamiento)) +
geom_boxplot()
colada %>% ggpaired(aes(tratamiento, aceptabilidad, fill = tratamiento)) +
geom_boxplot()
colada %>% ggpaired(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F)
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_bw()
?TukeyHSD
AOVcolada <- aov(aceptabilidad~tratamiento, data = colada)
TUKcolada <- TukeyHSD(AOVcolada)
plot(TUKcolada)
aindev.off()
dev.off()
plot(TUKcolada)
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_bw()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + geom_violin()   +guides(fill = F) + theme_bw()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot()    +guides(fill = F) + theme_bw()
plot(TUKcolada)
plot(TUKcolada)
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_bw()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_bw() + coord_flip()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_cleveland() + coord_flip()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_transparent() + coord_flip()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_pubr() + coord_flip()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_pubclean() + coord_flip()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_minimal() + coord_flip()
colada %>% ggplot(aes(x = tratamiento,y = aceptabilidad, fill = tratamiento)) +
geom_boxplot() + guides(fill = F) + theme_bw() + coord_flip()
install.packages(c('tidyverse','magrittr','xlsx', 'car','pid', 'gridExtra'), dependencies = T)
# Load Needed Packages
library('tidyverse')
library('magrittr')
library('xlsx')
install.packages("rJava")
install.packages("xlsx")
library('xlsx')
library(rJava)
install.packages("rJava")
install.packages("xlsx")
library(rJava)
library('xlsx')
library('car')
install.packages("carData")
install.packages("carData")
library('car')
library(carData)
library(car)
install.packages("car", dependencies = T)
library(car)
install.packages("data.table", dependencies = T)
library('car')
library(data.table)
install.packages("data.table")
library('pid')
library('gridExtra')
# Read all functions
source('Functions.R')
# The availeble options are: Quinoa, Maiz, Amaranto
# And f and p for fiber and protein respectively
fact_desing('Maiz', 'p')
# Read all functions
source('Functions.R')
# The availeble options are: Quinoa, Maiz, Amaranto
# And f and p for fiber and protein respectively
fact_desing('Maiz', 'p')
### Factorial Analyis ####
# This function computa factorial design by changing the plant name
fact_desing <- function(plant = 'Maiz', kind = 'f') {
# Read data
sheet <- paste(plant, kind, sep = '_')
data_f <- readData(sheet)
# Anova as regression model
data_aov <- aov(Respuesta~Tr*t*Tg, data_f)
cat(paste0('Factorial design, two levels three factors for: \n',
ifelse(kind == 'f', 'fiber ', 'protein '), 'of',
plant, '\n \n'))
# Anova table of the previos model
aov_table <- anova(data_aov, type = 'III')
aov_table
}
# The availeble options are: Quinoa, Maiz, Amaranto
# And f and p for fiber and protein respectively
fact_desing('Maiz', 'p')
